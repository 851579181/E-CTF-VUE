{"remainingRequest":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\src\\views\\scoreCard\\index.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\src\\views\\scoreCard\\index.vue","mtime":1580136156953},{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\rgdzg\\Desktop\\E-CTF\\E-CTF-VUE\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgewoJbWFyZ2luOiAwIGF1dG87CgltYXgtd2lkdGg6IDg1JTsKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6GA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/scoreCard","sourcesContent":["<template>\r\n\t<div class=\"ScoreCard\">\r\n\t\t<div class=\"container\" v-if=\"reload\">\r\n\t\t\t<h1 style=\"text-align: center; color: #409EFF;\">计分板</h1>\r\n\t\t\t<el-divider content-position=\"right\">\r\n\t\t\t\t<el-popover placement=\"top-start\" width=\"150\" trigger=\"hover\">\r\n\t\t\t\t\t<div><i class=\"el-icon-refresh\" style=\"color: #67C23A;\"></i><span style=\"margin-left: 5px;\">手动更新数据。</span></div>\r\n\t\t\t\t\t<el-button slot=\"reference\" type=\"success\" size=\"mini\" icon=\"el-icon-refresh\" circle autofocus @click=\"InitData\"></el-button>\r\n\t\t\t\t</el-popover>\r\n\t\t\t</el-divider>\r\n\t\t\t<el-table v-loading=\"loading\" :data=\"tableData.filter(data => !search || data.name.toLowerCase().includes(search.toLowerCase()))\"\r\n\t\t\t\tstyle=\"width: 100%\" :default-sort=\"{prop: 'rank', order: 'ascending'}\">\r\n\t\t\t\t<el-table-column align='center' prop=\"rank\" label=\"排名\" sortable>\r\n\t\t\t\t</el-table-column>\r\n\t\t\t\t<el-table-column align='center' prop=\"name\" label=\"ID\">\r\n\t\t\t\t</el-table-column>\r\n\t\t\t\t<el-table-column align='center' prop=\"solved\" label=\"解题数\" sortable>\r\n\t\t\t\t</el-table-column>\r\n\t\t\t\t<el-table-column align='center' prop=\"score\" label=\"分数\" sortable>\r\n\t\t\t\t</el-table-column>\r\n\t\t\t\t<el-table-column align=\"right\">\r\n\t\t\t\t\t<template slot=\"header\" slot-scope=\"scope\">\r\n\t\t\t\t\t\t<el-input prefix-icon=\"el-icon-search\" v-model=\"search\" size=\"mini\" placeholder=\"输入ID搜索\" v-on:clear=\"ResoleScope(scope)\" />\r\n\t\t\t\t\t</template>\r\n\t\t\t\t\t<template slot-scope=\"scope\">\r\n\t\t\t\t\t\t<el-button @click.native.prevent=\"CheckRow(scope.$index, tableData)\" type=\"text\" size=\"small\">\r\n\t\t\t\t\t\t\t查看\r\n\t\t\t\t\t\t</el-button>\r\n\t\t\t\t\t</template>\r\n\t\t\t\t</el-table-column>\r\n\t\t\t</el-table>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport {\r\n\t\tGetScoreCardData\r\n\t} from '@/api/api.js'\r\n\r\n\texport default {\r\n\t\tname: \"ScoreCard\",\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tloading: false,\r\n\t\t\t\treload: true,\r\n\t\t\t\ttableData: [],\r\n\t\t\t\tsearch: ''\r\n\t\t\t}\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tResoleScope: function(scope) {\r\n\t\t\t\twindow.console.log(scope);\r\n\t\t\t},\r\n\t\t\tCheckRow: function(idx, data) {\r\n\t\t\t\tconsole.log(idx, data);\r\n\t\t\t},\r\n\t\t\tInitData: async function() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.loading = true;\r\n\t\t\t\t\tlet rsp = await GetScoreCardData(this);\r\n\t\t\t\t\tif (rsp.data.code === 200) {\r\n\t\t\t\t\t\tthis.tableData = rsp.data.data;\r\n\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\ttype: 'success',\r\n\t\t\t\t\t\t\tmessage: '获取数据成功!'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tthis.ReloadSelf();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\t\ttype: 'warnning',\r\n\t\t\t\t\t\t\tmessage: '获取数据故障!'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\ttype: 'error',\r\n\t\t\t\t\t\tmessage: '获取数据失败,请检查网络!'\r\n\t\t\t\t\t});\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t\t}, 500)\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tReloadSelf: function() {\r\n\t\t\t\tthis.reload = false;\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.reload = true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated: function() {\r\n\t\t\tthis.InitData()\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t$route: function(to, from) {\r\n\t\t\t\tif (to.path == '/scoreCard') {\r\n\t\t\t\t\t//重新渲染子组件\r\n\t\t\t\t\tthis.InitData();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style >\r\n\t.container {\r\n\t\tmargin: 0 auto;\r\n\t\tmax-width: 85%;\r\n\t}\r\n</style>\n"]}]}